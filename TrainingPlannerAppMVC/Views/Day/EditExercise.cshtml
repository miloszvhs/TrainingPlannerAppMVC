@model TrainingPlannerAppMVC.Application.ViewModels.ExerciseVm.DayExerciseVm.NewDayExerciseVm

@{
    ViewData["Title"] = "EditExercise";
    string weight = "0";
}
<h4>Edit Exercise</h4>
<hr />
<div class="d-flex justify-content-center row">
    <div class="col-md-4">
        <form asp-action="EditExercise">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="DayId" class="form-control" />
            <input type="hidden" asp-for="Id" class="form-control" />
            <input type="hidden" asp-for="ExerciseDetails.Id" class="form-control"/>
            <div class="form-group">
                <label asp-for="ExerciseDetails.Name" class="control-label"></label>
                <input asp-for="ExerciseDetails.Name" class="form-control"/>
                <span asp-validation-for="ExerciseDetails.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ExerciseCategory" class="control-label">Exercise category</label>
                <input asp-for="ExerciseCategory" class="form-control"/>
                <span asp-validation-for="ExerciseCategory" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ExerciseDetails.Description" class="control-label"></label>
                <input asp-for="ExerciseDetails.Description" class="form-control"/>
                <span asp-validation-for="ExerciseDetails.Description" class="text-danger"></span>
            </div>
            <div class="border p-2 mt-1 mb-1">
                @foreach (var (item, index) in Model.ExerciseDetails.Sets.Select((x, y) => (x, y)))
                {
                    weight = Model.ExerciseDetails.Sets[index].Weight.ToString().Replace(",", "."); 
                    <input type="hidden" asp-for="ExerciseDetails.Sets[index].Id" class="form-control" />
                    <div class="form-group">
                        <label asp-for="ExerciseDetails.Sets[index].Reps" class="control-label"></label>
                        <input asp-for="ExerciseDetails.Sets[index].Reps" class="form-control"/>
                        <span asp-validation-for="ExerciseDetails.Sets[index].Reps" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="ExerciseDetails.Sets[index].Weight" class="control-label"></label>
                        <input asp-for="ExerciseDetails.Sets[index].Weight" class="form-control" value="@(weight)"/>
                        <span asp-validation-for="ExerciseDetails.Sets[index].Weight" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="ExerciseDetails.Sets[index].BreakTimeInSeconds" class="control-label">Break time in seconds</label>
                        <input asp-for="ExerciseDetails.Sets[index].BreakTimeInSeconds" class="form-control"/>
                        <span asp-validation-for="ExerciseDetails.Sets[index].BreakTimeInSeconds" class="text-danger"></span>
                    </div>
                }
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
        <div>
            <a asp-action="Details" asp-route-dayId="@Model.DayId">Back</a>
       </div>
    </div>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
